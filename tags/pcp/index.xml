<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>pcp on Luk치코 Zapletal</title><link>http://blog.zapletalovi.com/tags/pcp/</link><description>Recent content in pcp on Luk치코 Zapletal</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 21 Mar 2018 00:00:00 +0000</lastBuildDate><atom:link href="http://blog.zapletalovi.com/tags/pcp/index.xml" rel="self" type="application/rss+xml"/><item><title>Tracing Ruby apps with PCP</title><link>http://blog.zapletalovi.com/posts/2018-03-21-tracing-ruby-apps-with-pcp/</link><pubDate>Wed, 21 Mar 2018 00:00:00 +0000</pubDate><guid>http://blog.zapletalovi.com/posts/2018-03-21-tracing-ruby-apps-with-pcp/</guid><description>PCP offers two APIs for instrumented applications. The first one to mention is MMV agent which uses memory mapped files for capturing high-resolution data with minimum performance impact. Currently available languages for MMV instrumentation include C/C++, Python and Perl plus native Java,Golang and Rust ports. A second agent and approach is called PMDA trace with its higher level API. It uses TCP sockets and a simple API for capturing time spent, counters, trace points and raw value observations.</description></item></channel></rss>