<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>bash on Lukáš Zapletal</title><link>https://blog.zapletalovi.com/tags/bash/</link><description>Recent content in bash on Lukáš Zapletal</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 11 Mar 2013 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.zapletalovi.com/tags/bash/index.xml" rel="self" type="application/rss+xml"/><item><title>Never lost your bash history again</title><link>https://blog.zapletalovi.com/posts/2013-03-11-never-lost-your-bash-history-again/</link><pubDate>Mon, 11 Mar 2013 00:00:00 +0000</pubDate><guid>https://blog.zapletalovi.com/posts/2013-03-11-never-lost-your-bash-history-again/</guid><description>I had a cronjob which was archiving my bash history file, but after one of my Fedora upgrades, it stopped working and I lost my .bash_history. Now, that&amp;rsquo;s unfortunate!
To prevent this in the future, I have decided to take different approach. I have a script now which I run from my bash profile. It creates backups every month (leaving last 200 commands there so I will not lost the latest commands).</description></item><item><title>Rsync in cron</title><link>https://blog.zapletalovi.com/posts/2012-07-19-rsync-in-cron/</link><pubDate>Thu, 19 Jul 2012 00:00:00 +0000</pubDate><guid>https://blog.zapletalovi.com/posts/2012-07-19-rsync-in-cron/</guid><description>I've installed some rsync scripts to a RHEL6 cron yesterday, but this morning I was surprised with error messages in my mailbox:
/etc/bashrc: fork: retry: Resource temporarily unavailable
/etc/bashrc: fork: Resource temporarily unavailable
rsync: connection unexpectedly closed (0 bytes received so far) [receiver]
When you see resource temporarily unavailable you can be sure it is most likely some system limit issue, or your box is really running out of resources (worse case).</description></item><item><title>Tarball extractor bash script "Dancepill"</title><link>https://blog.zapletalovi.com/posts/2012-04-14-tarball-extractor-bash-script-dancepill/</link><pubDate>Sat, 14 Apr 2012 00:00:00 +0000</pubDate><guid>https://blog.zapletalovi.com/posts/2012-04-14-tarball-extractor-bash-script-dancepill/</guid><description>Dancepill is a fast extract script for Bash.
The problem
You want to extract directory fast. Using midnight commander or other extraction tools is very slow. Use dancepill, in your .bashrc do:
source path/to/your/git/clone/e
Logout or source it in your current terminal and start extracting:
e tarball.tar.gz
e tarball.tar.bzip2
e tarball.xz
e tarball.zip
e whatever
Please note the script introduces function "e"; stands for "extract" ;-)
Additional features
If the archive does not contain only one file or directory, dancepill will create an extra directory for you.</description></item><item><title>Copy-on-write with KVM</title><link>https://blog.zapletalovi.com/posts/2011-08-28-copy-on-write-with-kvm/</link><pubDate>Sun, 28 Aug 2011 00:00:00 +0000</pubDate><guid>https://blog.zapletalovi.com/posts/2011-08-28-copy-on-write-with-kvm/</guid><description>While KVM/QEMU snapshoting is still a dirty feature (quite slow), I love copy-on-write disc image format of the QEMU. It is actually the best way how to quiclky provision pre-installed systems for testing and development. The idea is easy:
Install a base operating system, configure it for your specific purposes.Stop it. You wont use it anymore, only copy-on-write "children". You may start it to do some additional configuration when you forgot something for example.</description></item><item><title>How to set timezone from shell quickly</title><link>https://blog.zapletalovi.com/posts/2011-08-25-how-to-set-timezone-from-shell-quickly/</link><pubDate>Thu, 25 Aug 2011 00:00:00 +0000</pubDate><guid>https://blog.zapletalovi.com/posts/2011-08-25-how-to-set-timezone-from-shell-quickly/</guid><description>The easiest trick is to override /etc/localtime:
# ln -sf /usr/share/zoneinfo/Europe/Prague /etc/localtime
According to the BIOS clocks and BIOS-UTC setting of the OS it is usually good idea to correct time:
# date +%T -s "22:30"
It's also quite good idea to start NTP daemon:
# service ntpd restart
# chkconfig ntpd on
For Fedora/RHEL systems you should also update sysconfig file to make this permanent:
# echo 'ZONE="Europe/Prague"' > /etc/sysconfig/clock</description></item><item><title>How to parse options in Bash</title><link>https://blog.zapletalovi.com/posts/2011-08-22-how-to-parse-options-in-bash/</link><pubDate>Mon, 22 Aug 2011 00:00:00 +0000</pubDate><guid>https://blog.zapletalovi.com/posts/2011-08-22-how-to-parse-options-in-bash/</guid><description>I needed to parse some options in a bash script. I was always using GNU getopt external program. It's portable, old and buggy, yet it can handle both short (-x) and long (--extra) options. More info can be found in it's man page:
# man getopt
Anyway, this is cool, but I just wanted short options and did not want to rely on external command. What were the options? Well, there is a bash built-in called getopts.</description></item><item><title>The unix-way and unzip</title><link>https://blog.zapletalovi.com/posts/2011-08-12-unix-way-and-unzip/</link><pubDate>Fri, 12 Aug 2011 00:00:00 +0000</pubDate><guid>https://blog.zapletalovi.com/posts/2011-08-12-unix-way-and-unzip/</guid><description>The whole world use ZIP package format. Nothing can be done, that is the fact. This poor compression format got famous thanks to the WinZIP utility and tons of its clones.
We, Linux and UNIX fans, use tarballs. This name was generalized and estabilished as a term for all compresset tar files. The most famous compression programs are gzip, bzip2 or the old guy named compress. All the utilities I just mentioned above works the UNIX WAY(TM).</description></item><item><title>How to pass username and password to OpenVPN client</title><link>https://blog.zapletalovi.com/posts/2011-08-02-how-to-pass-username-and-password-to/</link><pubDate>Tue, 02 Aug 2011 00:00:00 +0000</pubDate><guid>https://blog.zapletalovi.com/posts/2011-08-02-how-to-pass-username-and-password-to/</guid><description>I created small script that passes username/password to openvpn using named pipe.
USER=my_user
sudo killall openvpn 2>/dev/null
PIN=$(zenity --entry --title="OpenVPN" --text="Enter your password:" --hide-text)
[ $? -ne 0 ] &amp;&amp; echo PIN was not entered, exiting &amp;&amp; exit 1
FIFO=/tmp/ovpn.fifo
[ -p $FIFO ] || mkfifo -m 600 $FIFO
echo Connecting to VPN network
sudo nohup openvpn --config /etc/openvpn/my_config.conf --auth-user-pass $FIFO >/dev/null 2>&amp;1 &amp;
echo -ne "$USER\n$PIN\n" > $FIFO</description></item><item><title>Adresáře hoďte na zásobník (pushd a popd)</title><link>https://blog.zapletalovi.com/posts/2011-01-06-adresare-hodte-na-zasobnik-pushd-popd/</link><pubDate>Thu, 06 Jan 2011 00:00:00 +0000</pubDate><guid>https://blog.zapletalovi.com/posts/2011-01-06-adresare-hodte-na-zasobnik-pushd-popd/</guid><description>Situace. Pracujete v adresáři /a někde v hloubi unixové adresářové struktury a potřebujete na stejném stroji provést něco v adresáři /b úplně někde jinde. Chcete se ale poté vrátit do původního adresáře. Jak to efektivně provést?
Poznámka: pro zlepšení přehlednosti adresáře nazývám /a a /b, ale jde o to že takový adresář může být například /lib/modules/2.6.32-71.el6.x86_64/kernel/arch/x86/kernel/cpu/cpufreq nebo ještě pěknější /var/lib/tomcat6/webapps/rhn/WEB-INF/classes/org/apache/jsp/WEB_002dINF/pages/kickstart/wizard/profile/advanced.
Když pominu naivní přístup přechodu nejdřív do /b a poté pomocí opisování (ev.</description></item><item><title>Konverze symlinků na soubory</title><link>https://blog.zapletalovi.com/posts/2010-12-09-konverze-symlinku-na-soubory/</link><pubDate>Thu, 09 Dec 2010 00:00:00 +0000</pubDate><guid>https://blog.zapletalovi.com/posts/2010-12-09-konverze-symlinku-na-soubory/</guid><description>Potřeboval jsem dnes převést větší množství symlinků na cílové soubory. Nenašel jsem ani po pěti minutách žádný program (tedy jeden ano - unln napsaný v Perlu který nefungoval), takže jsem si vytvořil tento skript. Stačí mu předat jeden nebo více symlinků a on je přepíše cílovými soubory. Třeba se to bude někomu hodit. Použití je snadné:
# ls ...
test_link -> /tmp/test_file
# unln test_link
# ls ...
test_file</description></item><item><title>Sdílení historie mezi terminály</title><link>https://blog.zapletalovi.com/posts/2010-10-20-sdileni-historie-mezi-terminaly/</link><pubDate>Wed, 20 Oct 2010 00:00:00 +0000</pubDate><guid>https://blog.zapletalovi.com/posts/2010-10-20-sdileni-historie-mezi-terminaly/</guid><description>V poslední době se výrazně zvýšil počet terminálů, se kterými pracuji. Také přibylo velké množství příkazů, takže jsem se musel naučit lépe pracovat s historií v Bashi. Například jsem si nadefinoval alias, se kterým mohu rychle progrepovat v celé historii a prohlížet si například několik velmi podobných příkazů (a vybrat si ten konkrétní).
alias hist='history | grep $1"'
Pochopitelně bylo potřeba zvýšit si velikost historie a také zamezit vkládání příkazů začínajících mezerou, o kterých vím, že je v historii mít nechci.</description></item><item><title>Hesla libozvučná a jinak krásná</title><link>https://blog.zapletalovi.com/posts/2010-10-08-hesla-libozvucna-jinak-krasna/</link><pubDate>Fri, 08 Oct 2010 00:00:00 +0000</pubDate><guid>https://blog.zapletalovi.com/posts/2010-10-08-hesla-libozvucna-jinak-krasna/</guid><description>Hesla, nebo v mém případě názvy serverů, se těžko nejen pamatují, ale i vymýšlejí. Co kdybychom mohli takovou věc přenechat strojům? Existuje mnoho způsobů, jak toho docílit. Já si do dneška v hlavě nosím heslo do Státní vědecké knihovny v Olomouci, kde už snad přes deset nemám přístup (kartička mi propadla), takže není platné. Nicméně dostal jsem ho na vytištěném lístečku a dobře se pamatovalo. To proto, že bylo generováno po snadno zapamatovatelném vzoru samohláska, souhláska, samohláska, souhláska.</description></item><item><title>Pěkný klávesový cheatcheat pro readline/bash</title><link>https://blog.zapletalovi.com/posts/2010-10-08-pekny-klavesovy-cheatcheat-pro/</link><pubDate>Fri, 08 Oct 2010 00:00:00 +0000</pubDate><guid>https://blog.zapletalovi.com/posts/2010-10-08-pekny-klavesovy-cheatcheat-pro/</guid><description>Rozhodl jsem se vzdělávat v oblasti klávesových zkratek pro readline (resp. bash). Kromě mi známých Ctrl-a, Ctrl-e (začátek, konec řádku), Ctrl-d, Ctrl-w (smaž znak, smaž slovo zpětně), Ctrl-r (hledej v historii zpětně) a Ctrl-p, Ctrl-n (zpět/vpřed v historii) bych chtěl znát víc. Mnohem víc.
Asi na sekundu jsem přemýšlel o tom nastavit si v bashi vim řežim, ale téměř okamžitě jsem myšlenku zavrhl. Denně instaluji (resp. nechám si instalovat) jeden-dva operační systémy, musel bych to explicitně nastavovat pořád dokola.</description></item><item><title>Extrakt skript</title><link>https://blog.zapletalovi.com/posts/2010-09-14-extrakt-skript/</link><pubDate>Tue, 14 Sep 2010 00:00:00 +0000</pubDate><guid>https://blog.zapletalovi.com/posts/2010-09-14-extrakt-skript/</guid><description>Dost často musím rozbalovat nějaký archív, balík, tarball, něco. Používám šikovnou funkci, kterou mám ve svém bashrc souboru, jenže jsem zjistil, že na systémech Red Hat nefunguje (protože program file má o trošku jiný výstup). Skript jsem tedy upravil tak, aby fungoval i na RH systémech. Zde je výsledek:
# extract script for BASH
e() { for EXTRACT_FILE in $*; do
if [ -f "$EXTRACT_FILE" ] ; then FT1=$(file -bi "</description></item><item><title>Jak stáhnout mnoho alb z Jamenda wgetem</title><link>https://blog.zapletalovi.com/posts/2010-07-31-jak-stahnout-mnoho-alb-z-jamenda-wgetem/</link><pubDate>Sat, 31 Jul 2010 00:00:00 +0000</pubDate><guid>https://blog.zapletalovi.com/posts/2010-07-31-jak-stahnout-mnoho-alb-z-jamenda-wgetem/</guid><description>Na serveru Jamendo.com je spoustu skvělé muziky, to se ví. S nákupem nové hračky Stanton SCS3 jsem se rozhodl, že si nějakou stáhnu ve velkém, abych mohl zkusit připravit nějaký set ve stylu deep house čistě z muziky licencované pod Creative Commons. Ale jak na to?
První idea byla poslouchat skladby v Rhytmboxu a poté je stahovat. Tento program nabízí možnost stáhnutí alba z Jamenda, nicméně jsem bohužel neuspěl. A to proto, že Rhythmbox stahuje pouze torrent soubory, které jsou v současné době neseedované.</description></item></channel></rss>