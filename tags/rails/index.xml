<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rails on Luk치코 Zapletal</title><link>https://blog.zapletalovi.com/tags/rails/</link><description>Recent content in rails on Luk치코 Zapletal</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 02 Feb 2012 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.zapletalovi.com/tags/rails/index.xml" rel="self" type="application/rss+xml"/><item><title>Peek into your Ruby app with SystemTap</title><link>https://blog.zapletalovi.com/posts/2012-02-02-peek-into-your-ruby-app-with-systemtap/</link><pubDate>Thu, 02 Feb 2012 00:00:00 +0000</pubDate><guid>https://blog.zapletalovi.com/posts/2012-02-02-peek-into-your-ruby-app-with-systemtap/</guid><description>I already wrote about using SystemTap with Ruby. Today I want to extend the last example I linked at the very end of my article. It's a nice example script of Ruby "top" utility.
Today I was investigating our Katello unit test codebase. We have over 1600 examples and the number is rising every day. The whole run is about seven minutes long. The utility gives very nice first look on the app showing the top Ruby calls.</description></item><item><title>Lazy logger levels</title><link>https://blog.zapletalovi.com/posts/2012-01-30-lazy-logger-levels/</link><pubDate>Mon, 30 Jan 2012 00:00:00 +0000</pubDate><guid>https://blog.zapletalovi.com/posts/2012-01-30-lazy-logger-levels/</guid><description>Developers are lazy guys. They tend to make their lifes easier. I do it everyday. I never miss an opportunity to write a shell script or a shell bit instead of renaming 10+ files. Even when I know it will take exactly the same time as for the manual approach.
Every software piece in the world, I hope, have some decent logging. Those stacks offer various logging levels, such as debug, info, warn, error, and fatal taking Ruby on Rails as an example.</description></item></channel></rss>